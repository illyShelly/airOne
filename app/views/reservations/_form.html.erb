<div class="panel panel-default">
  <div class="panel-heading">
    <!-- show it if it is instant booking -->
    <span><% if @room.Instant? %><i class="fa fa-bolt" aria-hidden="true" style="color: #22e6c2"></i> <% end %>€<%= @room.price %>
    </span>
    <span>Per Night</span>
  </div>

  <div class="panel-body">
    <%= form_for([@room, @room.reservations.new]) do |f| %>
    <div class="row">
      <div class="col-md-6">
        <label>Check-in</label>
        <%= f.text_field :start_date, readonly: true, placeholder: "Check-in", class: "form-control datepicker" %>
      </div>
      <div class="col-md-6">
        <label>Check-out</label>
        <%= f.text_field :end_date, readonly: true, placeholder: "Check-out", disabled: true, class: "form-control datepicker" %>
      </div>
    </div>

    <!-- message -->
    <p class="message-alert text-center"><span id="message"></span></p>

    <div id="preview" style="display: none">
      <table class="reservation-table">
        <tbody>
          <tr>
            <td>Price</td>
            <td class="text-align-right">$<%= @room.price %></td>
          </tr>
          <!-- 2nd row -->
           <tr>
            <td>Night(s)</td>
            <td class="text-align-right">x <span id="reservation_nights"></span></td>
          </tr>
          <!-- 3rd row -->
           <tr>
            <td class="total">Total</td>
            <td class="text-align-right">€<span id="reservation_total"></span></td>
          </tr>
        </tbody>
      </table>
    </div>
      <br>
      <% if @room.Instant? %>
        <%= f.submit "Book now", id: "btn-book", disabled: true, class: "btn btn-small btn-block" %>
      <% else %>
        <%= f.submit "Request Now", id: "btn-book", disabled: true, class: "btn btn-small btn-block" %>
      <% end %>
    <% end %>

  </div>
</div>

<script>

  // check date with all unavailable dates
  function checkDate(date) {
    dmy = date.getDate() + "-" + (date.getMonth() + 1) + "-" + date.getFullYear();
      // takes date in given format and compare with every booked dates in the array
      // if matches return true ...
    return [$.inArray(dmy, unavailableDates) == -1];
  }

  //fce solving timezone issue
  // function resetUTC(d){
  //   var f = moment.utc(d);
  //   var now = new Date(f._d);
  //   var utcDate = new Date(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds());
  //   return utcDate;
  // }

  $(function() {

  unavailableDates = [];
  // 1. create AJAX
    $.ajax({
      // get reservations from the server -> running preload method in room controller returned in JSON
      url: '<%= preload_room_path(@room) %>',
      dateTyp: 'json',
      success: function(data) {
        // console.log(data);
        $.each(data, function(arrID, arrValue) {
          // id: 2, user_id: 1, room_id: 1, start_date: "2019-04-30T00:00:00.000Z", end_date: "2019-05-05T00:00:00.000Z",
          // FROM OUR DB in JSON:
              // arrValue.start_date => 2019-04-30T00:00:00.000Z
              // new Date(arrValue.start_date) => Tue Apr 30 2019 02:00:00 GMT+0200 (Central European Summer Time)
          // FOR LOOP
          for(var i = new Date(arrValue.start_date); i <= new Date(arrValue.end_date); i.setDate(i.getDate() + 1)) {
          // ALL DATES (RESERVATIONS) BELONGS TO THAT ROOM OBJECT
            // console.log(i);
              // Tue Apr 30 2019 02:00:00 GMT+0200 (Central European Summer Time), Wed May 01 2019 ..., etc.
          // DISABLE ALL DATES IN THE calender -> new array and push it there
            unavailableDates.push($.datepicker.formatDate('d-m-yy', i));
          }
        });
        // console.log(unavailableDates);

        // disable dates already picked
        $("#reservation_start_date").datepicker({
          // for display => for 01-01-2019, above for calculation 1-1-19
          dateFormat: 'dd-mm-yy',
          minDate: 0,
          maxDate: '6m',
          beforeShowDay: checkDate,
          onSelect: function(selected) {
            //all days before selected one will be disabled
            $('#reservation_end_date').datepicker("option", "minDate", selected);
            // all days after end-date will be disabled for start-date
            $('#reservation_end_date').attr("disabled", false);

            // added ajax from below part as well
            var start_date = $('#reservation_start_date').datepicker('getDate');
            var end_date = $('#reservation_end_date').datepicker('getDate');
            // in miliseconds -> 1000, min -> 60, hour -> 60, day -> 24h
            var nights = ((end_date - start_date)/1000/60/60/24)

            var input = {
              'start_date': start_date,
              'end_date': end_date
            }

             $.ajax({
              url: '<%= preview_room_path(@room) %>',
              data: input, // as data put input variable
              success: function(data) {

                // console.log("preview method return conflict based on picked dates");
                console.log(data); // preview method return JSON: // {confict: false}
                // console.log(data.conflict);
                if (data.conflict) {
                  $('#message').text("These days are not available.");
                  $('#preview').hide(); // with calculation
                  $('#btn-book').attr("disabled", true); // disabled button
                } else {
                  $('#message').hide();
                  $('#preview').show(); // show calculation
                  $('#btn-book').attr("disabled", false); // clickable button

                  // FILL in the calculation
                  var total = nights * <%= @room.price %>
                  // insert to browser
                  $('#reservation_nights').text(nights);
                  $('#reservation_total').text(total);
                }
              }
            });
          }
        });

        $("#reservation_end_date").datepicker({
          dateFormat: 'dd-mm-yy',
          minDate: 0,
          maxDate: '6m',
          beforeShowDay: checkDate,
          onSelect: function(selected) {
            $('#reservation_start_date').datepicker("option", "maxDate", selected);

            // grab data from user which picked
            var start_date = $('#reservation_start_date').datepicker('getDate');
            var end_date = $('#reservation_end_date').datepicker('getDate');

            // FILL in the calculation
            // in miliseconds -> 1000, min -> 60, hour -> 60, day -> 24h
            var nights = ((end_date - start_date)/1000/60/60/24)
            // console.log(nights)

            // new variable in JSON format following with AJAX request
            // these data goes to controller to 'preview method'
            var input = {
              'start_date': start_date,
              'end_date': end_date
            }

            $.ajax({
              url: '<%= preview_room_path(@room) %>',
              data: input, // as data put input variable
              success: function(data) {

                console.log("preview method return conflict based on picked dates");
                console.log(data); // preview method return JSON: // {confict: false}
                // console.log(data.conflict);
                if (data.conflict) {
                  $('#message').text("These days are not available.");
                  $('#preview').hide(); // with calculation
                  $('#btn-book').attr("disabled", true); // disabled button
                } else {
                  $('#message').hide();
                  $('#preview').show(); // show calculation
                  $('#btn-book').attr("disabled", false); // clickable button

                  // FILL in the calculation
                  var total = nights * <%= @room.price %>
                  // insert to browser
                  $('#reservation_nights').text(nights);
                  $('#reservation_total').text(total);
                }
              }
            });

          }
        });


      // end of success fce
      }

    // end of ajax
    });

  });

</script>
<!-- not good way to use hidden_field in form (solve it in server site), like:  -->
<!-- f.hidden_field :room_id, value: @room.id -->
<!-- f.hidden_field :price, value: @room.price -->
<!-- @room, @room.reservations.new -->
<!-- [@room, @reservation] -> room controller in show:  -->
<!-- @reservation = Reservation.new, @reservation.room_id = @room.id -->
<!-- form: -->
<!-- readonly: true ==> cannot fill the input just pick up from calender -->

<!-- in simple form -> is needed to use as:string for active record -->
<!-- console.log(data); (4) [{…}, {…}, {…}, {…}]
0:
created_at: "2019-04-29T15:45:27.555Z"
end_date: "2019-05-05T00:00:00.000Z"
id: 2
price: 99
room_id: 1
start_date: "2019-04-30T00:00:00.000Z"
total: 594
updated_at: "2019-04-29T15:45:27.555Z"
user_id: 1 -->
